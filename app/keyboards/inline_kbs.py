from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.database import is_admin


class EmployeeCallback(CallbackData, prefix="employee"):
    action: str
    name: str


async def main_kb(telegram_id):
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì± –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", callback_data='count'),
         InlineKeyboardButton(text="‚ùóÔ∏è –®—Ç—Ä–∞—Ñ—ã", callback_data='penalties')],

        [InlineKeyboardButton(text="üìÑ –ü–µ—á–∞—Ç—å –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤", callback_data='certificates')],
        [InlineKeyboardButton(text="üë§ –ú–æ–π –ü—Ä–æ—Ñ–∏–ª—å", callback_data="my_profile")]
    ])
    if await is_admin(telegram_id):
        inline_kb.inline_keyboard.append([InlineKeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")])
    return inline_kb


def admin_panel_kb():
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", callback_data='employees')],
        [InlineKeyboardButton(text="üìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã", callback_data='certificate_admin')],
        [InlineKeyboardButton(text="‚ùóÔ∏è –®—Ç—Ä–∞—Ñ—ã", callback_data='penalties_admin')],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='to_main_menu')]
    ])
    return inline_kb


def interrupt_employee_admin_panel():
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üü¢ –î–æ–±–∞–≤–∏—Ç—å", callback_data='add_employee'),
         InlineKeyboardButton(text="üî¥ –£–¥–∞–ª–∏—Ç—å", callback_data='delete_employee')],
        [InlineKeyboardButton(text="üìå –î–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data='add_admin')],
        [InlineKeyboardButton(text="‚ö†Ô∏è –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data='delete_admin')],
        [InlineKeyboardButton(text="üñä –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", callback_data='rename_employee')],
        [InlineKeyboardButton(text="üñä –ò–∑–º–µ–Ω–∏—Ç—å –¥–æ–ª–∂–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", callback_data='change_position')],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='admin_panel')]
    ])
    return inline_kb


def back_to_admin_panel_kb():
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back_to_admin_panel'), ]
    ])
    return inline_kb


def back_to_employees_admin_panel_kb():
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="employees"), ]
    ])
    return inline_kb


def create_pagination_kb(employees, page, total_employees, action):
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[])

    for employee in employees:
        inline_kb.inline_keyboard.append(
            [InlineKeyboardButton(
                text=employee,
                callback_data=EmployeeCallback(action=action, name=employee).pack()
            )]
        )

    pagination_buttons = []
    if page > 0:
        pagination_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"page_{page - 1}"))

    pagination_buttons.append(InlineKeyboardButton(text="‚Ü©Ô∏è –í –º–µ–Ω—é", callback_data="employees"))

    if (page + 1) * 5 < total_employees:
        pagination_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥", callback_data=f"page_{page + 1}"))

    inline_kb.inline_keyboard.append(pagination_buttons)
    return inline_kb


def game_counter(buttons_data):
    if not buttons_data:
        raise ValueError("–ö–Ω–æ–ø–∫–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏.")

    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=text, callback_data=button_id)]
        for button_id, text in buttons_data.items()
    ])
    return inline_kb


def prepayment_button():
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="5.000", callback_data='button_5000'),
         InlineKeyboardButton(text="25.000", callback_data='button_25000')],
    ])
    return inline_kb


def return_button():
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='return')],
    ])
    return inline_kb


def certificates_kb():
    inline_kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π", callback_data="create_new_cert"),
         InlineKeyboardButton(text="üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç", callback_data="check_cert")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="to_main_menu")]
    ])
    return inline_kb
